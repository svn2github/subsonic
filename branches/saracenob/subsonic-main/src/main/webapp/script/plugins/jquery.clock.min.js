// Styles
    //  0 Month Date, Year
    //
    //  1 Day, Month Date
    //  2 Day, Month Date Year
    //  3 Day, Month Date Year HH:MM AP
    //  4 Day, Month Date Year HH:MM:SS AP
    //
    //  5 MM/DD/YYYY
    //  6 DD/MM/YYYY
    //  7 YYYY/MM/DD
    //  8 YYYY/DD/MM
    //
    // 11 HH:MM (24 Hour)
    // 12 HH:MM AP (12 Hour)
    // 13 HH:MM:SS AP (12 Hour)
    //
    // 14 MM/DD/YYYY HH:MM (24 Hour)
    // 15 MM/DD/YYYY HH:MM AP (12 Hour)
    // 16 MM/DD/YYYY HH:MM:SS AP (12 Hour)

(function ($) {
	function clockCallback(a, b){
		var txt = "";
		d = new Date();
		nday   = d.getDay();
		nmonth = d.getMonth();
		ndate  = d.getDate();
		nyear  = d.getYear();
		nhour  = d.getHours();
		nmin   = d.getMinutes();
		nsec   = d.getSeconds();
		tmonth = new Array("January","February","March","April","May","June","July","August","September","October","November","December");
		tday   = new Array("Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday");

		if (nyear < 1000) nyear = nyear + 1900;

		if (typeof(b.format) === "undefined" || b.format == 12 || b.format == 13 || b.format == 15 || b.format == 16) {
				 if(nhour ==  0) {ap = " AM";nhour = 12;} 
			else if(nhour <= 11) {ap = " AM";} 
			else if(nhour == 12) {ap = " PM";} 
			else if(nhour >= 13) {ap = " PM";nhour -= 12;}
		}

		if(nmin <= 9) {nmin = "0" +nmin;}
		if(nsec <= 9) {nsec = "0" +nsec;}
		switch (b.format) {

			case  1: txt = ""+tday[nday]+", "+tmonth[nmonth]+" "+ndate+""; break;
			case  2: txt = ""+tday[nday]+", "+tmonth[nmonth]+" "+ndate+", "+nyear+""; break;
			case  3: txt = ""+tday[nday]+", "+tmonth[nmonth]+" "+ndate+", "+nyear+" "+nhour+":"+nmin+ap+""; break;
			case  4: txt = ""+tday[nday]+", "+tmonth[nmonth]+" "+ndate+", "+nyear+" "+nhour+":"+nmin+":"+nsec+ap+""; break;

			case  5: txt = ""+(nmonth+1)+"/"+ndate+"/"+nyear+""; break;
			case  6: txt = ""+ndate+"/"+(nmonth+1)+"/"+nyear+""; break;
			case  7: txt = ""+(nmonth+1)+"/"+ndate+"/"+nyear+""; break;
			case  8: txt = ""+ndate+"/"+(nmonth+1)+"/"+nyear+""; break;

			case 11: txt = ""+nhour+":"+nmin+""; break;
			case 12: txt = ""+nhour+":"+nmin+ap+""; break;
			case 13: txt = ""+nhour+":"+nmin+":"+nsec+ap+""; break;

			case 14: txt = ""+(nmonth+1)+"/"+ndate+"/"+nyear+" "+nhour+":"+nmin+""; break;
			case 15: txt = ""+(nmonth+1)+"/"+ndate+"/"+nyear+" "+nhour+":"+nmin+ap+""; break;
			case 16: txt = ""+(nmonth+1)+"/"+ndate+"/"+nyear+" "+nhour+":"+nmin+":"+nsec+ap+""; break;

			default: txt = ""+(nmonth+1)+"/"+ndate+"/"+nyear+" "+nhour+":"+nmin+ap+"";
		}

		a.html(txt)
		setTimeout(function() { clockCallback(a, b) }, 1000);
	}

    $.extend($.fn, {
        addClock : function(a) {
			a = $.extend( {format : 11, separator : "/"}, a);
			clockCallback(this, a);
			return this;
        }
    });
})(jQuery)